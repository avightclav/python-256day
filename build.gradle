/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */

plugins {
    id 'com.bmuschko.docker-remote-api' version '6.1.1'
}

// Import task types
import com.bmuschko.gradle.docker.tasks.image.*
import com.bmuschko.gradle.docker.tasks.container.*
import com.bmuschko.gradle.docker.tasks.log.*

task buildDockerfile(type: Dockerfile) {
	destFile = project.file("Dockerfile")
	from('python:3')
    exposePort(8080)
	copyFile('src/my_script.py', 'my_script.py')
	instruction('CMD python -u /my_script.py')
}

// Use task types
task buildMyAppImage(type: DockerBuildImage, dependsOn: buildDockerfile) {
	inputDir = file('.')
    images.add('python-256day:latest')
}

task createMyAppContainer(type: DockerCreateContainer) {
    dependsOn buildMyAppImage
    targetImageId buildMyAppImage.getImageId()
    hostConfig.portBindings = ['80:8080']
    hostConfig.autoRemove = true
}

task startContainer(type: DockerStartContainer, dependsOn: createMyAppContainer) {
    targetContainerId createMyAppContainer.getContainerId()
}

task startService(type: DockerLogsContainer, dependsOn: startContainer) {
    targetContainerId { startContainer.getContainerId().get() }
    follow = true
    tailAll = true
    onNext {
        message -> logger.quiet message.toString() 
    }
}
